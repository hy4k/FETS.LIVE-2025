"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkG5BKY4GHcjs = require('./chunk-G5BKY4GH.cjs');var _multipartparser = require('@mjackson/multipart-parser');var _url = require('url');var _commontags = require('common-tags');function L(p,i=100){switch(p){case"api":return _commontags.stripIndent`
        select id, identifier, timestamp, event_message, request.method, request.path, response.status_code
        from edge_logs
        cross join unnest(metadata) as m
        cross join unnest(m.request) as request
        cross join unnest(m.response) as response
        order by timestamp desc
        limit ${i}
      `;case"branch-action":return _commontags.stripIndent`
        select workflow_run, workflow_run_logs.timestamp, id, event_message from workflow_run_logs
        order by timestamp desc
        limit ${i}
      `;case"postgres":return _commontags.stripIndent`
        select identifier, postgres_logs.timestamp, id, event_message, parsed.error_severity from postgres_logs
        cross join unnest(metadata) as m
        cross join unnest(m.parsed) as parsed
        order by timestamp desc
        limit ${i}
      `;case"edge-function":return _commontags.stripIndent`
        select id, function_edge_logs.timestamp, event_message, response.status_code, request.method, m.function_id, m.execution_time_ms, m.deployment_id, m.version from function_edge_logs
        cross join unnest(metadata) as m
        cross join unnest(m.response) as response
        cross join unnest(m.request) as request
        order by timestamp desc
        limit ${i}
      `;case"auth":return _commontags.stripIndent`
        select id, auth_logs.timestamp, event_message, metadata.level, metadata.status, metadata.path, metadata.msg as msg, metadata.error from auth_logs
        cross join unnest(metadata) as metadata
        order by timestamp desc
        limit ${i}
      `;case"storage":return _commontags.stripIndent`
        select id, storage_logs.timestamp, event_message from storage_logs
        order by timestamp desc
        limit ${i}
      `;case"realtime":return _commontags.stripIndent`
        select id, realtime_logs.timestamp, event_message from realtime_logs
        order by timestamp desc
        limit ${i}
      `;default:throw new Error(`unsupported log service type: ${p}`)}}var _openapifetch = require('openapi-fetch'); var _openapifetch2 = _interopRequireDefault(_openapifetch);var _zod = require('zod');function P(p,i,d={}){return _openapifetch2.default.call(void 0, {baseUrl:p,headers:{Authorization:`Bearer ${i}`,...d}})}var H=_zod.z.object({message:_zod.z.string()});function r(p,i){if("error"in p){if(p.response.status===401)throw new Error("Unauthorized. Please provide a valid access token to the MCP server via the --access-token flag or SUPABASE_ACCESS_TOKEN.");let{data:d}=H.safeParse(p.error);throw d?new Error(d.message):new Error(i)}}var I="ABCDEFGHIJKLMNOPQRSTUVWXYZ",N="abcdefghijklmnopqrstuvwxyz",W="0123456789",K="!@#$%^&*()_+~`|}{[]:;?><,./-=",$=({length:p=10,numbers:i=!1,symbols:d=!1,uppercase:w=!0,lowercase:a=!0}={})=>{let m="";if(w&&(m+=I),a&&(m+=N),i&&(m+=W),d&&(m+=K),m.length===0)throw new Error("at least one character set must be selected");let O=new Uint32Array(p);crypto.getRandomValues(O);let E="";for(let v=0;v<p;v++){let S=O[v]%m.length;E+=m.charAt(S)}return E};var{version:V}=_chunkG5BKY4GHcjs.a;function fe(p){let{accessToken:i,apiUrl:d}=p,w=_nullishCoalesce(d, () => ("https://api.supabase.com")),a=P(w,i),m={async listOrganizations(){let t=await a.GET("/v1/organizations");return r(t,"Failed to fetch organizations"),t.data},async getOrganization(t){let e=await a.GET("/v1/organizations/{slug}",{params:{path:{slug:t}}});return r(e,"Failed to fetch organization"),e.data},async listProjects(){let t=await a.GET("/v1/projects");return r(t,"Failed to fetch projects"),t.data},async getProject(t){let e=await a.GET("/v1/projects/{ref}",{params:{path:{ref:t}}});return r(e,"Failed to fetch project"),e.data},async createProject(t){let{name:e,organization_id:s,region:n,db_pass:o}=_chunkG5BKY4GHcjs.k.parse(t),c=await a.POST("/v1/projects",{body:{name:e,region:n,organization_id:s,db_pass:_nullishCoalesce(o, () => ($({length:16,numbers:!0,uppercase:!0,lowercase:!0})))}});return r(c,"Failed to create project"),c.data},async pauseProject(t){let e=await a.POST("/v1/projects/{ref}/pause",{params:{path:{ref:t}}});r(e,"Failed to pause project")},async restoreProject(t){let e=await a.POST("/v1/projects/{ref}/restore",{params:{path:{ref:t}}});r(e,"Failed to restore project")}},O={async executeSql(t,e){let{query:s,read_only:n}=_chunkG5BKY4GHcjs.o.parse(e),o=await a.POST("/v1/projects/{ref}/database/query",{params:{path:{ref:t}},body:{query:s,read_only:n}});return r(o,"Failed to execute SQL query"),o.data},async listMigrations(t){let e=await a.GET("/v1/projects/{ref}/database/migrations",{params:{path:{ref:t}}});return r(e,"Failed to fetch migrations"),e.data},async applyMigration(t,e){let{name:s,query:n}=_chunkG5BKY4GHcjs.p.parse(e),o=await a.POST("/v1/projects/{ref}/database/migrations",{params:{path:{ref:t}},body:{name:s,query:n}});r(o,"Failed to apply migration")}},E={async getLogs(t,e){let{service:s,iso_timestamp_start:n,iso_timestamp_end:o}=_chunkG5BKY4GHcjs.s.parse(e),c=L(s),u=await a.GET("/v1/projects/{ref}/analytics/endpoints/logs.all",{params:{path:{ref:t},query:{sql:c,iso_timestamp_start:n,iso_timestamp_end:o}}});return r(u,"Failed to fetch logs"),u.data},async getSecurityAdvisors(t){let e=await a.GET("/v1/projects/{ref}/advisors/security",{params:{path:{ref:t}}});return r(e,"Failed to fetch security advisors"),e.data},async getPerformanceAdvisors(t){let e=await a.GET("/v1/projects/{ref}/advisors/performance",{params:{path:{ref:t}}});return r(e,"Failed to fetch performance advisors"),e.data}},v={async getProjectUrl(t){let e=new URL(w);return`https://${t}.${Y(e.hostname)}`},async getAnonKey(t){let e=await a.GET("/v1/projects/{ref}/api-keys",{params:{path:{ref:t},query:{reveal:!1}}});r(e,"Failed to fetch API keys");let s=_optionalChain([e, 'access', _2 => _2.data, 'optionalAccess', _3 => _3.find, 'call', _4 => _4(n=>n.name==="anon")]);if(!_optionalChain([s, 'optionalAccess', _5 => _5.api_key]))throw new Error("Anonymous key not found");return s.api_key},async generateTypescriptTypes(t){let e=await a.GET("/v1/projects/{ref}/types/typescript",{params:{path:{ref:t}}});return r(e,"Failed to fetch TypeScript types"),e.data}},S={async listEdgeFunctions(t){let e=await a.GET("/v1/projects/{ref}/functions",{params:{path:{ref:t}}});return r(e,"Failed to fetch Edge Functions"),e.data.map(s=>{let n=_chunkG5BKY4GHcjs.u.call(void 0, t,s.id,s.version),o=s.entrypoint_path?_chunkG5BKY4GHcjs.v.call(void 0, {deploymentId:n,filename:_url.fileURLToPath.call(void 0, s.entrypoint_path,{windows:!1})}):void 0,c=s.import_map_path?_chunkG5BKY4GHcjs.v.call(void 0, {deploymentId:n,filename:_url.fileURLToPath.call(void 0, s.import_map_path,{windows:!1})}):void 0;return{...s,entrypoint_path:o,import_map_path:c}})},async getEdgeFunction(t,e){let s=await a.GET("/v1/projects/{ref}/functions/{function_slug}",{params:{path:{ref:t,function_slug:e}}});if(s.error)throw s.error;r(s,"Failed to fetch Edge Function");let n=s.data,o=_chunkG5BKY4GHcjs.u.call(void 0, t,n.id,n.version),c=n.entrypoint_path?_chunkG5BKY4GHcjs.v.call(void 0, {deploymentId:o,filename:_url.fileURLToPath.call(void 0, n.entrypoint_path,{windows:!1})}):void 0,u=n.import_map_path?_chunkG5BKY4GHcjs.v.call(void 0, {deploymentId:o,filename:_url.fileURLToPath.call(void 0, n.import_map_path,{windows:!1})}):void 0,y=await a.GET("/v1/projects/{ref}/functions/{function_slug}/body",{params:{path:{ref:t,function_slug:e}},headers:{Accept:"multipart/form-data"},parseAs:"stream"});r(y,"Failed to fetch Edge Function files");let g=y.response.headers.get("content-type");if(!g||!g.startsWith("multipart/form-data"))throw new Error(`Unexpected content type: ${g}. Expected multipart/form-data.`);let l=_multipartparser.getMultipartBoundary.call(void 0, g);if(!l)throw new Error("No multipart boundary found in response headers");if(!y.data)throw new Error("No data received from Edge Function body");let h=[],T=_multipartparser.parseMultipartStream.call(void 0, y.data,{boundary:l});for await(let b of T)b.isFile&&b.filename&&h.push({name:_chunkG5BKY4GHcjs.v.call(void 0, {deploymentId:o,filename:b.filename}),content:b.text});return{...n,entrypoint_path:c,import_map_path:u,files:h}},async deployEdgeFunction(t,e){let{name:s,entrypoint_path:n,import_map_path:o,files:c}=_chunkG5BKY4GHcjs.n.parse(e),u;try{u=await S.getEdgeFunction(t,s)}catch (e2){}let y=c.find(l=>["deno.json","import_map.json"].includes(l.name));o??=_nullishCoalesce(_optionalChain([u, 'optionalAccess', _6 => _6.import_map_path]), () => (_optionalChain([y, 'optionalAccess', _7 => _7.name])));let g=await a.POST("/v1/projects/{ref}/functions/deploy",{params:{path:{ref:t},query:{slug:s}},body:{metadata:{name:s,entrypoint_path:n,import_map_path:o},file:c},bodySerializer(l){let h=new FormData,T=new Blob([JSON.stringify(l.metadata)],{type:"application/json"});return h.append("metadata",T),_optionalChain([l, 'access', _8 => _8.file, 'optionalAccess', _9 => _9.forEach, 'call', _10 => _10(b=>{let A=b,z=new Blob([A.content],{type:"application/typescript"});h.append("file",z,A.name)})]),h}});return r(g,"Failed to deploy Edge Function"),g.data}};return{async init(t){let{clientInfo:e}=t;if(!e)throw new Error("Client info is required");a=P(w,i,{"User-Agent":`supabase-mcp/${V} (${e.name}/${e.version})`})},account:m,database:O,debugging:E,development:v,functions:S,branching:{async listBranches(t){let e=await a.GET("/v1/projects/{ref}/branches",{params:{path:{ref:t}}});return e.response.status===422?[]:(r(e,"Failed to list branches"),e.data)},async createBranch(t,e){let{name:s}=_chunkG5BKY4GHcjs.l.parse(e),n=await a.POST("/v1/projects/{ref}/branches",{params:{path:{ref:t}},body:{branch_name:s}});return r(n,"Failed to create branch"),n.data},async deleteBranch(t){let e=await a.DELETE("/v1/branches/{branch_id}",{params:{path:{branch_id:t}}});r(e,"Failed to delete branch")},async mergeBranch(t){let e=await a.POST("/v1/branches/{branch_id}/merge",{params:{path:{branch_id:t}},body:{}});r(e,"Failed to merge branch")},async resetBranch(t,e){let{migration_version:s}=_chunkG5BKY4GHcjs.m.parse(e),n=await a.POST("/v1/branches/{branch_id}/reset",{params:{path:{branch_id:t}},body:{migration_version:s}});r(n,"Failed to reset branch")},async rebaseBranch(t){let e=await a.POST("/v1/branches/{branch_id}/push",{params:{path:{branch_id:t}},body:{}});r(e,"Failed to rebase branch")}},storage:{async listAllBuckets(t){let e=await a.GET("/v1/projects/{ref}/storage/buckets",{params:{path:{ref:t}}});return r(e,"Failed to list storage buckets"),e.data},async getStorageConfig(t){let e=await a.GET("/v1/projects/{ref}/config/storage",{params:{path:{ref:t}}});return r(e,"Failed to get storage config"),e.data},async updateStorageConfig(t,e){let s=await a.PATCH("/v1/projects/{ref}/config/storage",{params:{path:{ref:t}},body:{fileSizeLimit:e.fileSizeLimit,features:{imageTransformation:{enabled:e.features.imageTransformation.enabled},s3Protocol:{enabled:e.features.s3Protocol.enabled}}}});return r(s,"Failed to update storage config"),s.data}}}}function Y(p){switch(p){case"api.supabase.com":return"supabase.co";case"api.supabase.green":return"supabase.green";default:return"supabase.red"}}exports.a = fe;
//# sourceMappingURL=chunk-V76IGA24.cjs.map